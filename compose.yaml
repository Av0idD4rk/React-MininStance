services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ctf
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ctf_deploy
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ctf -d ctf_deploy"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    command: ["redis-server", "--save", ""]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  api_gateway:
    build:
      context: .
      dockerfile: crates/api_gateway/Dockerfile
      network: host
    image: ctf-api-gateway
    container_name: ctf-api-gateway
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      REDIS_URL: "redis://redis:6379"
      DATABASE_URL: "postgres://ctf:ctf_pass@postgres/ctf_deploy"
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
      - /var/run/docker.sock:/var/run/docker.sock


  scheduler:
    build:
      context: .
      dockerfile: crates/scheduler_service/Dockerfile
      network: host
    image: ctf-scheduler
    container_name: ctf-scheduler
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      REDIS_URL: "redis://redis:6379"
      DATABASE_URL: "postgres://ctf:ctf_pass@postgres/ctf_deploy"
    volumes:
      - ./:/app
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:
  redis_data:
